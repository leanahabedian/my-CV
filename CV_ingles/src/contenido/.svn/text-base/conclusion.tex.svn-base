\section{Conclusión}

Este TP consistió de dos partes, una teórica, donde analizamos la propagación de los errores teóricos, y una práctica, donde observamos eso en los programas que codeamos. Primero, obtuvimos una cota para el error que surge de cortar la sumatoria en un término, que fue menor al valor absoluto del término siguiente. Al momento de realizar el calculo del error de propagación de la serie de McLaurin obtuvimos funciones recursivas de la propagación del error, lo que no nos servía por la poca informacion que nos brinda. La solucion fue desarrollar esa función hasta lograr la formula cerrada. Al final pudimos observar la cantidad de errores que pueden producirse al realizar dicha cuenta.

Al analizar la función de forma empírica, comenzamos calculando el coseno con precision nativa y términos fijos. Lo que primero fue detectado fue la forma en que iban intercambiándose los resultados de la aplicacion desarrollada por nosotros, en que según cada término el resultado se pasaba del valor real ya sea por arriba o por abajo. Comparando los valores con el coseno implementado en la clase math notamos que estos no eran tan variantes sin embargo aún tirando muchos términos quedaba aún una diferencia entre lo desarrollado y lo ya existente.
Pudimos notar que el error era lo que restaba desde el termino seleccionado hasta el infinito y si bien comprobarlo es imposible a traves de una implementacion nos permitimos probar calcular el error con cuentas de terminos siguientes para ver el error que este nos entregaba.

Otra de las cosas que pudimos observar tiene que ver en la diferencia que tenia la serie de Maclaurin cuando trabaja con valores cercanos al 0 y cuando lo hace con valores alejados del mismo. Observamos que mientras en valores cercanos al 0 con una cantidad de terminos $n$ los resultados que se obtienen son muy precisos, en valores mas alejados los resultados obtenidos son poco acertados aun aumentando en gran cantidad la cantidad de terminos. Esto pudimos observar que comenzaba a ocurrir cuando cuando $x^{2i} > 2i!$, concluimos que esto ocurre porque cada termino es mayor al anterior por lo que a medida que vamos incrementandolos en vez de acercarse al resultado esperado se va alejando, un mayor $n$ causa que este punto de quiebre se alcance más lentamente, si $n = \infty$, ese punto de quiebre no existiría nunca y la función sería exactamente igual a $\cos (x)$, pero como $n$ es finito, la aproximación no es exacta.

Por otro lado en la otra parte nos ejercicios se nos pedia que el usuario sea el que decida la cantidad de terminos en la mantisa iban a ser mostrados. Podemos ver que se obtiene una menor precisión si se limita la cantidad de dígitos de la mantisa, porque se propagan más errores porque $\beta^{1-t}$ es más grande, al ser $t$ más pequeño, esto causa que cada operación tenga un error aparejado más grande y por ende el resultado final diste más del teórico.